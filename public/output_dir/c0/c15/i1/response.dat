HTTP/1.1 500 Internal Server Error
Date: Sun, 18 Dec 2011 16:43:09 GMT
Server: Apache/2.2.17 (Ubuntu)
X-Powered-By: Phusion Passenger (mod_rails/mod_rack) 3.0.9
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Set-Cookie: rack.session=BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFNjk5NjM5MjhmNWNjYTQ5ZmU5MjRm%0AZGMyZDEzYTBjNTA5NTQwZmY4ZDdhODVmNzIwNzA1Y2IzMjdiYmRmMjZkMUki%0ADXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItMWY5NjJk%0ANGQ5M2JjYmUxYTI5OTlhNTY3N2IyNTZjMTZjMzI0YmY5MkkiGUhUVFBfQUND%0ARVBUX0VOQ09ESU5HBjsARiItY2E1NDZlMzY5YmVlY2FhZTM5NjhjMTI2ZmNj%0AYjhiNTQxNWU0YWU4NEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZGEz%0AOWEzZWU1ZTZiNGIwZDMyNTViZmVmOTU2MDE4OTBhZmQ4MDcwOUkiCWNzcmYG%0AOwBGIkVlNTZjYzhhNDdkN2I3Y2U5ZjNhMzg4MzFkNDNmZjFjY2YyNzBjNDU5%0ANzQxMGFlNzQzZGY0YTk2YmI2YjAwNDFhSSIMYWNjb3VudAY7AEZvOgxBY2Nv%0AdW50CzoIQGlkaQc6EEBpZGVudGlmaWVySSIGMQY7AFQ6CkBuYW1lSSIKU21p%0AdGgGOwBUOhBAY3JlYXRlZF9hdFU6DURhdGVUaW1lWwhVOg1SYXRpb25hbFsH%0AbCsIY2X7DgIAaQIQDlU7DFsHafZpHWkDGRUjOhFAX3JlcG9zaXRvcnlvOhtE%0AYXRhTWFwcGVyOjpSZXBvc2l0b3J5CDsJOgxkZWZhdWx0OhNAaWRlbnRpdHlf%0AbWFwc3sGYwxBY2NvdW50QzocRGF0YU1hcHBlcjo6SWRlbnRpdHlNYXB7BlsG%0AaQdAEzoNQGFkYXB0ZXJvOidEYXRhTWFwcGVyOjpBZGFwdGVyczo6TXlzcWxB%0AZGFwdGVyCjsJOw86DUBvcHRpb25zQzoVRGF0YU1hcHBlcjo6TWFzaHsOSSIL%0Ac2NoZW1lBjsARkkiCm15c3FsBjsARkkiCXVzZXIGOwBGSSIJcm9vdAY7AEZJ%0AIg1wYXNzd29yZAY7AEZJIgtqZWZmNjkGOwBGSSIJaG9zdAY7AEZJIg5sb2Nh%0AbGhvc3QGOwBUSSIJcG9ydAY7AEYwSSIJcGF0aAY7AEZJIhQvY2FwaXRhbGNv%0Abm5lY3QGOwBGSSIKcXVlcnkGOwBGMEkiDWZyYWdtZW50BjsARjBJIgxhZGFw%0AdGVyBjsARkAlOiBAcmVzb3VyY2VfbmFtaW5nX2NvbnZlbnRpb25tRkRhdGFN%0AYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpSZXNvdXJjZTo6VW5kZXJzY29y%0AZWRBbmRQbHVyYWxpemVkOh1AZmllbGRfbmFtaW5nX2NvbnZlbnRpb25tNkRh%0AdGFNYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpGaWVsZDo6VW5kZXJzY29y%0AZWQ6FEBub3JtYWxpemVkX3VyaW86FURhdGFPYmplY3RzOjpVUkkPOgxAc2No%0AZW1lQCU6D0BzdWJzY2hlbWUwOgpAdXNlckAnOg5AcGFzc3dvcmRAKToKQGhv%0Ac3RAKzoKQHBvcnQwOgpAcGF0aEAuOgtAcXVlcnlDOxV7DkkiC3NjaGVtZQY7%0AAEZAJUkiCXVzZXIGOwBGQCdJIg1wYXNzd29yZAY7AEZAKUkiCWhvc3QGOwBG%0AQCtJIglwb3J0BjsARjBJIglwYXRoBjsARkAuSSIKcXVlcnkGOwBGMEkiDWZy%0AYWdtZW50BjsARjBJIgxhZGFwdGVyBjsARkAlOg5AZnJhZ21lbnQwOg5AcmVs%0AYXRpdmUwOhhAX3BlcnNpc3RlbmNlX3N0YXRlbzoyRGF0YU1hcHBlcjo6UmVz%0Ab3VyY2U6OlBlcnNpc3RlbmNlU3RhdGU6OkNsZWFuBzoOQHJlc291cmNlQBM6%0AC0Btb2RlbEAf%0A
Status: 500
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 18328
Connection: close
Content-Type: text/html

<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>NoMethodError at &#x2F;suppliers</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>NoMethodError</strong> at <strong>&#x2F;suppliers
          </strong></h1>
        <h2>undefined method `mail&#x27; for nil:NilClass</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            index.haml</code></li>
          <li><strong>location:</strong> <code>evaluate_source
            </code></li>
          <li class="last"><strong>line:
            </strong> 5</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;Documents&#x2F;projects&#x2F;pos&#x2F;app&#x2F;views&#x2F;suppliers&#x2F;index.haml</code> in
                <code><strong>evaluate_source</strong></code>
            </li>

            <li class="code app">
              
              <ol start="1"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>.content
</code></li>
                
                <li class="pre-context-line"><code>  .page-header
</code></li>
                
                <li class="pre-context-line"><code>    %h1
</code></li>
                
                <li class="pre-context-line"><code>      Fournisseurs
</code></li>
                
              </ol>
              

              <ol start="5" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>      %small &lt;strong&gt;#{current_account.name}&lt;&#x2F;strong&gt; pour &lt;strong&gt;#{current_user.mail}&lt;&#x2F;strong&gt;</code></li>
              </ol>

              
              <ol start="6" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>  .row
</code></li>
                
                <li class="post-context-line"><code>    .span16
</code></li>
                
                <li class="post-context-line"><code>      %h2.count&gt;
</code></li>
                
                <li class="post-context-line"><code>        &lt;span&gt;#{suppliers.count.to_s}&lt;&#x2F;span&gt; fournisseurs
</code></li>
                
                <li class="post-context-line"><code>        %a.btn.medium.success{:id =&gt; &#x27;btn-add-text&#x27;, :href =&gt; &quot;&#x2F;suppliers&#x2F;new&quot;} Ajouter un fournisseur
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      %ul.items
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>instance_eval</strong></code>
            </li>

            <li class="code system">
              
              <ol start="202"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>        compile_template_method(locals_keys)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  private
</code></li>
                
                <li class="pre-context-line"><code>    # Evaluate the template source in the context of the scope object.
</code></li>
                
                <li class="pre-context-line"><code>    def evaluate_source(scope, locals, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>      source, offset = precompiled(locals)
</code></li>
                
              </ol>
              

              <ol start="209" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>      scope.instance_eval(source, eval_file, line - offset)</code></li>
              </ol>

              
              <ol start="210" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # JRuby doesn&#x27;t allow Object#instance_eval to yield to the block it&#x27;s
</code></li>
                
                <li class="post-context-line"><code>    # closed over. This is by design and (ostensibly) something that will
</code></li>
                
                <li class="post-context-line"><code>    # change in MRI, though no current MRI version tested (1.8.6 - 1.9.2)
</code></li>
                
                <li class="post-context-line"><code>    # exhibits the behavior. More info here:
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>evaluate_source</strong></code>
            </li>

            <li class="code system">
              
              <ol start="202"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>        compile_template_method(locals_keys)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  private
</code></li>
                
                <li class="pre-context-line"><code>    # Evaluate the template source in the context of the scope object.
</code></li>
                
                <li class="pre-context-line"><code>    def evaluate_source(scope, locals, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>      source, offset = precompiled(locals)
</code></li>
                
              </ol>
              

              <ol start="209" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>      scope.instance_eval(source, eval_file, line - offset)</code></li>
              </ol>

              
              <ol start="210" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # JRuby doesn&#x27;t allow Object#instance_eval to yield to the block it&#x27;s
</code></li>
                
                <li class="post-context-line"><code>    # closed over. This is by design and (ostensibly) something that will
</code></li>
                
                <li class="post-context-line"><code>    # change in MRI, though no current MRI version tested (1.8.6 - 1.9.2)
</code></li>
                
                <li class="post-context-line"><code>    # exhibits the behavior. More info here:
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>cached_evaluate</strong></code>
            </li>

            <li class="code system">
              
              <ol start="137"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>      # Redefine itself to use method compilation the next time:
</code></li>
                
                <li class="pre-context-line"><code>      def self.cached_evaluate(scope, locals, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        method = compiled_method(locals.keys)
</code></li>
                
                <li class="pre-context-line"><code>        method.bind(scope).call(locals, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Use instance_eval the first time:
</code></li>
                
              </ol>
              

              <ol start="144" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>      evaluate_source(scope, locals, &amp;block)</code></li>
              </ol>

              
              <ol start="145" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Generates all template source by combining the preamble, template, and
</code></li>
                
                <li class="post-context-line"><code>    # postamble and returns a two-tuple of the form: [source, offset], where
</code></li>
                
                <li class="post-context-line"><code>    # source is the string containing (Ruby) source code for the template and
</code></li>
                
                <li class="post-context-line"><code>    # offset is the integer line offset where line reporting should begin.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>evaluate</strong></code>
            </li>

            <li class="code system">
              
              <ol start="120"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>        compile!
</code></li>
                
                <li class="pre-context-line"><code>      else
</code></li>
                
                <li class="pre-context-line"><code>        raise NotImplementedError
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def evaluate(scope, locals, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="127" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>      cached_evaluate(scope, locals, &amp;block)</code></li>
              </ol>

              
              <ol start="128" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Process the template and return the result. The first time this
</code></li>
                
                <li class="post-context-line"><code>    # method is called, the template source is evaluated with instance_eval.
</code></li>
                
                <li class="post-context-line"><code>    # On the sequential method calls it will compile the template to an
</code></li>
                
                <li class="post-context-line"><code>    # unbound method which will lead to better performance. In any case,
</code></li>
                
                <li class="post-context-line"><code>    # template executation is guaranteed to be performed in the scope object
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;haml.rb</code> in
                <code><strong>evaluate</strong></code>
            </li>

            <li class="code system">
              
              <ol start="17"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>    def prepare
</code></li>
                
                <li class="pre-context-line"><code>      options = @options.merge(:filename =&gt; eval_file, :line =&gt; line)
</code></li>
                
                <li class="pre-context-line"><code>      @engine = ::Haml::Engine.new(data, options)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def evaluate(scope, locals, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>      if @engine.respond_to?(:precompiled_method_return_value, true)
</code></li>
                
              </ol>
              

              <ol start="24" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>        super</code></li>
              </ol>

              
              <ol start="25" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        @engine.render(scope, locals, &amp;block)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Precompiled Haml source. Taken from the precompiled_with_ambles
</code></li>
                
                <li class="post-context-line"><code>    # method in Haml::Precompiler:
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code system">
              
              <ol start="69"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>      prepare
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="pre-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="pre-context-line"><code>    # +yield+.
</code></li>
                
                <li class="pre-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="76" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>      evaluate scope, locals || {}, &amp;block</code></li>
              </ol>

              
              <ol start="77" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # The basename of the template file.
</code></li>
                
                <li class="post-context-line"><code>    def basename(suffix=&#x27;&#x27;)
</code></li>
                
                <li class="post-context-line"><code>      File.basename(file, suffix) if file
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="618"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>      layout_engine   = options.delete(:layout_engine) || engine
</code></li>
                
                <li class="pre-context-line"><code>      scope           = options.delete(:scope)         || self
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # compile and render template
</code></li>
                
                <li class="pre-context-line"><code>      layout_was      = @default_layout
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = false
</code></li>
                
                <li class="pre-context-line"><code>      template        = compile_template(engine, data, options, views)
</code></li>
                
              </ol>
              

              <ol start="625" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>      output          = template.render(scope, locals, &amp;block)</code></li>
              </ol>

              
              <ol start="626" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>      @default_layout = layout_was
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # render layout
</code></li>
                
                <li class="post-context-line"><code>      if layout
</code></li>
                
                <li class="post-context-line"><code>        options = options.merge(:views =&gt; views, :layout =&gt; false, :eat_errors =&gt; eat_errors, :scope =&gt; scope)
</code></li>
                
                <li class="post-context-line"><code>        catch(:layout_missing) { return render(layout_engine, layout, options, locals) { output } }
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>haml</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="515"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>    def erubis(template, options={}, locals={})
</code></li>
                
                <li class="pre-context-line"><code>      warn &quot;Sinatra::Templates#erubis is deprecated and will be removed, use #erb instead.\n&quot; \
</code></li>
                
                <li class="pre-context-line"><code>        &quot;If you have Erubis installed, it will be used automatically.&quot;
</code></li>
                
                <li class="pre-context-line"><code>      render :erubis, template, options, locals
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def haml(template, options={}, locals={})
</code></li>
                
              </ol>
              

              <ol start="522" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>      render :haml, template, options, locals</code></li>
              </ol>

              
              <ol start="523" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def sass(template, options={}, locals={})
</code></li>
                
                <li class="post-context-line"><code>      options.merge! :layout =&gt; false, :default_content_type =&gt; :css
</code></li>
                
                <li class="post-context-line"><code>      render :sass, template, options, locals
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;Documents&#x2F;projects&#x2F;pos&#x2F;app&#x2F;controllers&#x2F;supplier.rb</code> in
                <code><strong>block in &lt;class:CapitalConnect&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="1"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>class CapitalConnect &lt; Sinatra::Application
</code></li>
                
                <li class="pre-context-line"><code>  get &#x27;&#x2F;suppliers&#x27; do
</code></li>
                
                <li class="pre-context-line"><code>    suppliers = Supplier.all
</code></li>
                
              </ol>
              

              <ol start="4" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>    haml :&#x27;suppliers&#x2F;index&#x27;, :locals =&gt; {:title_part =&gt; &#x27;Fournisseurs&#x27;, :suppliers =&gt; suppliers}</code></li>
              </ol>

              
              <ol start="5" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>  
</code></li>
                
                <li class="post-context-line"><code>  get &#x27;&#x2F;suppliers&#x2F;new&#x27; do
</code></li>
                
                <li class="post-context-line"><code>    supplier = Supplier.new
</code></li>
                
                <li class="post-context-line"><code>    haml :&#x27;suppliers&#x2F;new&#x27;, :locals =&gt; {:title_part =&gt; &#x27;Fournisseurs&#x27;, :supplier =&gt; supplier}
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>  
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="781"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="788" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="789" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="814"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
                <li class="pre-context-line"><code>        catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="821" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>          block ? block[self, @block_params] : yield(self, @block_params)</code></li>
              </ol>

              
              <ol start="822" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="764"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="771" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="772" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="879"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>      filter! :before
</code></li>
                
              </ol>
              

              <ol start="886" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>      route!</code></li>
              </ol>

              
              <ol start="887" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      handle_exception!(boom)
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Error handling during requests.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="685"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="692" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="693" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    attr_accessor :env, :request, :response, :params
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if respond_to?(:prefers_plain_text?) and prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        parts     = []
</code></li>
                
                <li class="post-context-line"><code>        unescaped = path.gsub(&#x27;%2e&#x27;, &#x27;.&#x27;).gsub(&#x27;%2f&#x27;, &#x27;&#x2F;&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="10"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>    # JSON GET APIs are vulnerable to being embedded as JavaScript while the
</code></li>
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_reaction :deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="17" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="18" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>        if headers[&#x27;Content-Type&#x27;].to_s.split(&#x27;;&#x27;, 2).first =~ &#x2F;^\s*application\&#x2F;json\s*$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>          result = react(env) if referrer(env) != Request.new(env).host
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        result or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>context</strong></code>
            </li>

            <li class="code system">
              
              <ol start="188"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
                <li class="pre-context-line"><code>          context(env)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="pre-context-line"><code>          prepare_session(env)
</code></li>
                
              </ol>
              

              <ol start="195" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>          status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="196" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def initialize_sid
</code></li>
                
                <li class="post-context-line"><code>          @sidbits = @default_options[:sidbits]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="183"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>          @default_options = self.class::DEFAULT_OPTIONS.merge(options)
</code></li>
                
                <li class="pre-context-line"><code>          @key = options[:key] || &quot;rack.session&quot;
</code></li>
                
                <li class="pre-context-line"><code>          @cookie_only = @default_options.delete(:cookie_only)
</code></li>
                
                <li class="pre-context-line"><code>          initialize_sid
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
              </ol>
              

              <ol start="190" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>          context(env)</code></li>
              </ol>

              
              <ol start="191" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="post-context-line"><code>          prepare_session(env)
</code></li>
                
                <li class="post-context-line"><code>          status, headers, body = app.call(env)
</code></li>
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;logger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="8"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      logger = ::Logger.new(env[&#x27;rack.errors&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>      logger.level = @level
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = logger
</code></li>
                
              </ol>
              

              <ol start="15" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="16" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;commonlogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="13"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>    def initialize(app, logger=nil)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @logger = logger
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      began_at = Time.now
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>      status, header, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>      header = Utils::HeaderHash.new(header)
</code></li>
                
                <li class="post-context-line"><code>      body = BodyProxy.new(body) { log(env, status, header, began_at) }
</code></li>
                
                <li class="post-context-line"><code>      [status, header, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Head
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;methodoverride.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="17"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>        method = method.to_s.upcase
</code></li>
                
                <li class="pre-context-line"><code>        if HTTP_METHODS.include?(method)
</code></li>
                
                <li class="pre-context-line"><code>          env[&quot;rack.methodoverride.original_method&quot;] = env[&quot;REQUEST_METHOD&quot;]
</code></li>
                
                <li class="pre-context-line"><code>          env[&quot;REQUEST_METHOD&quot;] = method
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="24" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="25" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if respond_to?(:prefers_plain_text?) and prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1396"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1403" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>          yield</code></li>
              </ol>

              
              <ol start="1404" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    public
</code></li>
                
                <li class="post-context-line"><code>      CALLERS_TO_IGNORE = [ # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;\&#x2F;sinatra(\&#x2F;(base|main|showexceptions))?\.rb$&#x2F;, # all sinatra code
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;lib\&#x2F;tilt.*\.rb$&#x2F;,                              # all tilt code
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;rack&#x2F;request_handler.rb</code> in
                <code><strong>process_request</strong></code>
            </li>

            <li class="code app">
              
              <ol start="89"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>			
</code></li>
                
                <li class="pre-context-line"><code>			if env[HTTPS] == YES || env[HTTPS] == ON || env[HTTPS] == ONE
</code></li>
                
                <li class="pre-context-line"><code>				env[RACK_URL_SCHEME] = HTTPS_DOWNCASE
</code></li>
                
                <li class="pre-context-line"><code>			else
</code></li>
                
                <li class="pre-context-line"><code>				env[RACK_URL_SCHEME] = HTTP
</code></li>
                
                <li class="pre-context-line"><code>			end
</code></li>
                
                <li class="pre-context-line"><code>			
</code></li>
                
              </ol>
              

              <ol start="96" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>			status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="97" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>			begin
</code></li>
                
                <li class="post-context-line"><code>				if full_http_response
</code></li>
                
                <li class="post-context-line"><code>					output.write(&quot;HTTP&#x2F;1.1 #{status.to_i.to_s} Whatever#{CRLF}&quot;)
</code></li>
                
                <li class="post-context-line"><code>					output.write(&quot;Connection: close#{CRLF}&quot;)
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>				headers_output = [
</code></li>
                
                <li class="post-context-line"><code>					STATUS, status.to_i.to_s, CRLF,
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_request_handler.rb</code> in
                <code><strong>accept_and_process_next_request</strong></code>
            </li>

            <li class="code app">
              
              <ol start="506"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>		
</code></li>
                
                <li class="pre-context-line"><code>		if headers
</code></li>
                
                <li class="pre-context-line"><code>			prepare_request(headers)
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
                <li class="pre-context-line"><code>				if headers[REQUEST_METHOD] == PING
</code></li>
                
                <li class="pre-context-line"><code>					process_ping(headers, input_stream, connection)
</code></li>
                
                <li class="pre-context-line"><code>				else
</code></li>
                
              </ol>
              

              <ol start="513" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>					process_request(headers, input_stream, connection, full_http_response)</code></li>
              </ol>

              
              <ol start="514" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>			rescue Exception
</code></li>
                
                <li class="post-context-line"><code>				has_error = true
</code></li>
                
                <li class="post-context-line"><code>				raise
</code></li>
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
                <li class="post-context-line"><code>				finalize_request(headers, has_error)
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_request_handler.rb</code> in
                <code><strong>main_loop</strong></code>
            </li>

            <li class="code app">
              
              <ol start="267"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>			install_useful_signal_handlers
</code></li>
                
                <li class="pre-context-line"><code>			socket_wrapper = Utils::UnseekableSocket.new
</code></li>
                
                <li class="pre-context-line"><code>			channel        = MessageChannel.new
</code></li>
                
                <li class="pre-context-line"><code>			buffer         = &#x27;&#x27;
</code></li>
                
                <li class="pre-context-line"><code>			
</code></li>
                
                <li class="pre-context-line"><code>			while true
</code></li>
                
                <li class="pre-context-line"><code>				@iterations += 1
</code></li>
                
              </ol>
              

              <ol start="274" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>				if !accept_and_process_next_request(socket_wrapper, channel, buffer)</code></li>
              </ol>

              
              <ol start="275" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>					trace(2, &quot;Request handler main loop exited normally&quot;)
</code></li>
                
                <li class="post-context-line"><code>					break
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>				@processed_requests += 1
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
                <li class="post-context-line"><code>		rescue EOFError
</code></li>
                
                <li class="post-context-line"><code>			# Exit main loop.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;rack&#x2F;application_spawner.rb</code> in
                <code><strong>start_request_handler</strong></code>
            </li>

            <li class="code app">
              
              <ol start="198"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>			app_process = AppProcess.new(app_root, Process.pid, writer,
</code></li>
                
                <li class="pre-context-line"><code>				handler.server_sockets)
</code></li>
                
                <li class="pre-context-line"><code>			app_process.write_to_channel(channel)
</code></li>
                
                <li class="pre-context-line"><code>			writer.close
</code></li>
                
                <li class="pre-context-line"><code>			channel.close
</code></li>
                
                <li class="pre-context-line"><code>			
</code></li>
                
                <li class="pre-context-line"><code>			before_handling_requests(forked, options)
</code></li>
                
              </ol>
              

              <ol start="205" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>			handler.main_loop</code></li>
              </ol>

              
              <ol start="206" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>		ensure
</code></li>
                
                <li class="post-context-line"><code>			channel.close rescue nil
</code></li>
                
                <li class="post-context-line"><code>			writer.close rescue nil
</code></li>
                
                <li class="post-context-line"><code>			handler.cleanup rescue nil
</code></li>
                
                <li class="post-context-line"><code>			after_handling_requests
</code></li>
                
                <li class="post-context-line"><code>		end
</code></li>
                
                <li class="post-context-line"><code>	end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;rack&#x2F;application_spawner.rb</code> in
                <code><strong>block in handle_spawn_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="163"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>		options = sanitize_spawn_options(Hash[*options])
</code></li>
                
                <li class="pre-context-line"><code>		a, b = UNIXSocket.pair
</code></li>
                
                <li class="pre-context-line"><code>		safe_fork(&#x27;application&#x27;, true) do
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
                <li class="pre-context-line"><code>				a.close
</code></li>
                
                <li class="pre-context-line"><code>				client.close
</code></li>
                
                <li class="pre-context-line"><code>				options = @options.merge(options)
</code></li>
                
              </ol>
              

              <ol start="170" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>				self.class.send(:start_request_handler, MessageChannel.new(b),</code></li>
              </ol>

              
              <ol start="171" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>					@app, true, options)
</code></li>
                
                <li class="post-context-line"><code>			rescue SignalException =&gt; e
</code></li>
                
                <li class="post-context-line"><code>				if e.message != AbstractRequestHandler::HARD_TERMINATION_SIGNAL &amp;&amp;
</code></li>
                
                <li class="post-context-line"><code>				   e.message != AbstractRequestHandler::SOFT_TERMINATION_SIGNAL
</code></li>
                
                <li class="post-context-line"><code>					raise
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;utils.rb</code> in
                <code><strong>safe_fork</strong></code>
            </li>

            <li class="code app">
              
              <ol start="472"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>		if pid.nil?
</code></li>
                
                <li class="pre-context-line"><code>			has_exception = false
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
                <li class="pre-context-line"><code>				if double_fork
</code></li>
                
                <li class="pre-context-line"><code>					pid2 = fork
</code></li>
                
                <li class="pre-context-line"><code>					if pid2.nil?
</code></li>
                
                <li class="pre-context-line"><code>						srand
</code></li>
                
              </ol>
              

              <ol start="479" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>						yield</code></li>
              </ol>

              
              <ol start="480" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>					end
</code></li>
                
                <li class="post-context-line"><code>				else
</code></li>
                
                <li class="post-context-line"><code>					srand
</code></li>
                
                <li class="post-context-line"><code>					yield
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>			rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>				has_exception = true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;rack&#x2F;application_spawner.rb</code> in
                <code><strong>handle_spawn_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="158"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>		end
</code></li>
                
                <li class="pre-context-line"><code>	end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>private
</code></li>
                
                <li class="pre-context-line"><code>	def handle_spawn_application(client, *options)
</code></li>
                
                <li class="pre-context-line"><code>		options = sanitize_spawn_options(Hash[*options])
</code></li>
                
                <li class="pre-context-line"><code>		a, b = UNIXSocket.pair
</code></li>
                
              </ol>
              

              <ol start="165" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>		safe_fork(&#x27;application&#x27;, true) do</code></li>
              </ol>

              
              <ol start="166" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>			begin
</code></li>
                
                <li class="post-context-line"><code>				a.close
</code></li>
                
                <li class="post-context-line"><code>				client.close
</code></li>
                
                <li class="post-context-line"><code>				options = @options.merge(options)
</code></li>
                
                <li class="post-context-line"><code>				self.class.send(:start_request_handler, MessageChannel.new(b),
</code></li>
                
                <li class="post-context-line"><code>					@app, true, options)
</code></li>
                
                <li class="post-context-line"><code>			rescue SignalException =&gt; e
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server.rb</code> in
                <code><strong>server_main_loop</strong></code>
            </li>

            <li class="code app">
              
              <ol start="350"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>					if client_password != password
</code></li>
                
                <li class="pre-context-line"><code>						next
</code></li>
                
                <li class="pre-context-line"><code>					end
</code></li>
                
                <li class="pre-context-line"><code>					
</code></li>
                
                <li class="pre-context-line"><code>					name, *args = client.read
</code></li>
                
                <li class="pre-context-line"><code>					if name
</code></li>
                
                <li class="pre-context-line"><code>						if @message_handlers.has_key?(name)
</code></li>
                
              </ol>
              

              <ol start="357" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>							__send__(@message_handlers[name], client, *args)</code></li>
              </ol>

              
              <ol start="358" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>						else
</code></li>
                
                <li class="post-context-line"><code>							raise UnknownMessage, &quot;Unknown message &#x27;#{name}&#x27; received.&quot;
</code></li>
                
                <li class="post-context-line"><code>						end
</code></li>
                
                <li class="post-context-line"><code>					end
</code></li>
                
                <li class="post-context-line"><code>				ensure
</code></li>
                
                <li class="post-context-line"><code>					client_socket.close
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server.rb</code> in
                <code><strong>start_synchronously</strong></code>
            </li>

            <li class="code app">
              
              <ol start="199"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>	# All hooks will be called, except before_fork().
</code></li>
                
                <li class="pre-context-line"><code>	def start_synchronously(socket_filename, password, server_socket, owner_socket)
</code></li>
                
                <li class="pre-context-line"><code>		@owner_socket = owner_socket
</code></li>
                
                <li class="pre-context-line"><code>		begin
</code></li>
                
                <li class="pre-context-line"><code>			reset_signal_handlers
</code></li>
                
                <li class="pre-context-line"><code>			initialize_server
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
              </ol>
              

              <ol start="206" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>				server_main_loop(password, server_socket)</code></li>
              </ol>

              
              <ol start="207" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
                <li class="post-context-line"><code>				finalize_server
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
                <li class="post-context-line"><code>		rescue Interrupt
</code></li>
                
                <li class="post-context-line"><code>			# Do nothing
</code></li>
                
                <li class="post-context-line"><code>		ensure
</code></li>
                
                <li class="post-context-line"><code>			@owner_socket = nil
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code app">
              
              <ol start="173"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>				# result in mysterious &#x27;EBADFD&#x27; errors. So we force RubyGems to
</code></li>
                
                <li class="pre-context-line"><code>				# clear all open file handles.
</code></li>
                
                <li class="pre-context-line"><code>				Gem.clear_paths
</code></li>
                
                <li class="pre-context-line"><code>				
</code></li>
                
                <li class="pre-context-line"><code>				# Reseed pseudo-random number generator for security reasons.
</code></li>
                
                <li class="pre-context-line"><code>				srand
</code></li>
                
                <li class="pre-context-line"><code>				
</code></li>
                
              </ol>
              

              <ol start="180" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>				start_synchronously(@socket_filename, @password, server_socket, b)</code></li>
              </ol>

              
              <ol start="181" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>			rescue Interrupt
</code></li>
                
                <li class="post-context-line"><code>				# Do nothing.
</code></li>
                
                <li class="post-context-line"><code>				has_exception = true
</code></li>
                
                <li class="post-context-line"><code>			rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>				has_exception = true
</code></li>
                
                <li class="post-context-line"><code>				print_exception(self.class.to_s, e)
</code></li>
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;rack&#x2F;application_spawner.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code app">
              
              <ol start="121"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>	# Overrided from AbstractServer#start.
</code></li>
                
                <li class="pre-context-line"><code>	#
</code></li>
                
                <li class="pre-context-line"><code>	# May raise these additional exceptions:
</code></li>
                
                <li class="pre-context-line"><code>	# - AppInitError: The Rack application raised an exception
</code></li>
                
                <li class="pre-context-line"><code>	#   or called exit() during startup.
</code></li>
                
                <li class="pre-context-line"><code>	# - ApplicationSpawner::Error: The ApplicationSpawner server exited unexpectedly.
</code></li>
                
                <li class="pre-context-line"><code>	def start
</code></li>
                
              </ol>
              

              <ol start="128" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>		super</code></li>
              </ol>

              
              <ol start="129" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
                <li class="post-context-line"><code>		begin
</code></li>
                
                <li class="post-context-line"><code>			channel = MessageChannel.new(@owner_socket)
</code></li>
                
                <li class="post-context-line"><code>			unmarshal_and_raise_errors(channel, @options[&quot;print_exceptions&quot;])
</code></li>
                
                <li class="post-context-line"><code>		rescue IOError, SystemCallError, SocketError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>			stop if started?
</code></li>
                
                <li class="post-context-line"><code>			raise Error, &quot;The application spawner server exited unexpectedly: #{e}&quot;
</code></li>
                
                <li class="post-context-line"><code>		rescue
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;spawn_manager.rb</code> in
                <code><strong>block (2 levels) in spawn_rack_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="246"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>				spawner = @spawners.lookup_or_add(key) do
</code></li>
                
                <li class="pre-context-line"><code>					spawner_timeout = options[&quot;app_spawner_timeout&quot;]
</code></li>
                
                <li class="pre-context-line"><code>					spawner = Rack::ApplicationSpawner.new(
</code></li>
                
                <li class="pre-context-line"><code>						@options.merge(options))
</code></li>
                
                <li class="pre-context-line"><code>					if spawner_timeout != -1
</code></li>
                
                <li class="pre-context-line"><code>						spawner.max_idle_time = spawner_timeout
</code></li>
                
                <li class="pre-context-line"><code>					end
</code></li>
                
              </ol>
              

              <ol start="253" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>					spawner.start</code></li>
              </ol>

              
              <ol start="254" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
                <li class="post-context-line"><code>					spawner
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
                <li class="post-context-line"><code>				begin
</code></li>
                
                <li class="post-context-line"><code>					return spawner.spawn_application(options)
</code></li>
                
                <li class="post-context-line"><code>				rescue AbstractServer::ServerError
</code></li>
                
                <li class="post-context-line"><code>					@spawners.delete(key)
</code></li>
                
                <li class="post-context-line"><code>					raise
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server_collection.rb</code> in
                <code><strong>lookup_or_add</strong></code>
            </li>

            <li class="code app">
              
              <ol start="125"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>		raise ArgumentError, &quot;cleanup() has already been called.&quot; if @done
</code></li>
                
                <li class="pre-context-line"><code>		must_be_in_synchronize_block
</code></li>
                
                <li class="pre-context-line"><code>		server = @collection[key]
</code></li>
                
                <li class="pre-context-line"><code>		if server
</code></li>
                
                <li class="pre-context-line"><code>			register_activity(server)
</code></li>
                
                <li class="pre-context-line"><code>			return server
</code></li>
                
                <li class="pre-context-line"><code>		else
</code></li>
                
              </ol>
              

              <ol start="132" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>			server = yield</code></li>
              </ol>

              
              <ol start="133" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
                <li class="post-context-line"><code>			if !server.respond_to?(:start)
</code></li>
                
                <li class="post-context-line"><code>				raise TypeError, &quot;The block didn&#x27;t return a valid AbstractServer object.&quot;
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
                <li class="post-context-line"><code>			if eligable_for_cleanup?(server)
</code></li>
                
                <li class="post-context-line"><code>				server.next_cleaning_time = Time.now + server.max_idle_time
</code></li>
                
                <li class="post-context-line"><code>				if @next_cleaning_time &amp;&amp; server.next_cleaning_time &lt; @next_cleaning_time
</code></li>
                
                <li class="post-context-line"><code>					@next_cleaning_time = server.next_cleaning_time
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;spawn_manager.rb</code> in
                <code><strong>block in spawn_rack_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="239"
                  class="pre-context" id="pre-61"
                  onclick="toggle(61);">
                
                <li class="pre-context-line"><code>		create_spawner = nil
</code></li>
                
                <li class="pre-context-line"><code>		key            = nil
</code></li>
                
                <li class="pre-context-line"><code>		
</code></li>
                
                <li class="pre-context-line"><code>		case spawn_method
</code></li>
                
                <li class="pre-context-line"><code>		when nil, &quot;&quot;, &quot;smart&quot;, &quot;smart-lv2&quot;
</code></li>
                
                <li class="pre-context-line"><code>			@spawners.synchronize do
</code></li>
                
                <li class="pre-context-line"><code>				key = &quot;app:#{app_group_name}&quot;
</code></li>
                
              </ol>
              

              <ol start="246" class="context" id="61"
                  onclick="toggle(61);">
                <li class="context-line" id="context-61"><code>				spawner = @spawners.lookup_or_add(key) do</code></li>
              </ol>

              
              <ol start="247" class="post-context"
                  id="post-61" onclick="toggle(61);">
                
                <li class="post-context-line"><code>					spawner_timeout = options[&quot;app_spawner_timeout&quot;]
</code></li>
                
                <li class="post-context-line"><code>					spawner = Rack::ApplicationSpawner.new(
</code></li>
                
                <li class="post-context-line"><code>						@options.merge(options))
</code></li>
                
                <li class="post-context-line"><code>					if spawner_timeout != -1
</code></li>
                
                <li class="post-context-line"><code>						spawner.max_idle_time = spawner_timeout
</code></li>
                
                <li class="post-context-line"><code>					end
</code></li>
                
                <li class="post-context-line"><code>					spawner.start
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server_collection.rb</code> in
                <code><strong>block in synchronize</strong></code>
            </li>

            <li class="code app">
              
              <ol start="75"
                  class="pre-context" id="pre-62"
                  onclick="toggle(62);">
                
                <li class="pre-context-line"><code>	# Acquire the lock for this AbstractServerCollection object, and run
</code></li>
                
                <li class="pre-context-line"><code>	# the code within the block. The entire block will be a single atomic
</code></li>
                
                <li class="pre-context-line"><code>	# operation.
</code></li>
                
                <li class="pre-context-line"><code>	def synchronize
</code></li>
                
                <li class="pre-context-line"><code>		@lock.synchronize do
</code></li>
                
                <li class="pre-context-line"><code>			@in_synchronize_block = true
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
              </ol>
              

              <ol start="82" class="context" id="62"
                  onclick="toggle(62);">
                <li class="context-line" id="context-62"><code>				yield</code></li>
              </ol>

              
              <ol start="83" class="post-context"
                  id="post-62" onclick="toggle(62);">
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
                <li class="post-context-line"><code>				if @next_cleaning_time.nil?
</code></li>
                
                <li class="post-context-line"><code>					@collection.each_value do |server|
</code></li>
                
                <li class="post-context-line"><code>						if @next_cleaning_time.nil? ||
</code></li>
                
                <li class="post-context-line"><code>						   (eligable_for_cleanup?(server) &amp;&amp;
</code></li>
                
                <li class="post-context-line"><code>						    server.next_cleaning_time &lt; @next_cleaning_time
</code></li>
                
                <li class="post-context-line"><code>						   )
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server_collection.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code app">
              
              <ol start="72"
                  class="pre-context" id="pre-64"
                  onclick="toggle(64);">
                
                <li class="pre-context-line"><code>		end
</code></li>
                
                <li class="pre-context-line"><code>	end
</code></li>
                
                <li class="pre-context-line"><code>	
</code></li>
                
                <li class="pre-context-line"><code>	# Acquire the lock for this AbstractServerCollection object, and run
</code></li>
                
                <li class="pre-context-line"><code>	# the code within the block. The entire block will be a single atomic
</code></li>
                
                <li class="pre-context-line"><code>	# operation.
</code></li>
                
                <li class="pre-context-line"><code>	def synchronize
</code></li>
                
              </ol>
              

              <ol start="79" class="context" id="64"
                  onclick="toggle(64);">
                <li class="context-line" id="context-64"><code>		@lock.synchronize do</code></li>
              </ol>

              
              <ol start="80" class="post-context"
                  id="post-64" onclick="toggle(64);">
                
                <li class="post-context-line"><code>			@in_synchronize_block = true
</code></li>
                
                <li class="post-context-line"><code>			begin
</code></li>
                
                <li class="post-context-line"><code>				yield
</code></li>
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
                <li class="post-context-line"><code>				if @next_cleaning_time.nil?
</code></li>
                
                <li class="post-context-line"><code>					@collection.each_value do |server|
</code></li>
                
                <li class="post-context-line"><code>						if @next_cleaning_time.nil? ||
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;spawn_manager.rb</code> in
                <code><strong>spawn_rack_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="237"
                  class="pre-context" id="pre-65"
                  onclick="toggle(65);">
                
                <li class="pre-context-line"><code>		spawn_method   = options[&quot;spawn_method&quot;]
</code></li>
                
                <li class="pre-context-line"><code>		spawner        = nil
</code></li>
                
                <li class="pre-context-line"><code>		create_spawner = nil
</code></li>
                
                <li class="pre-context-line"><code>		key            = nil
</code></li>
                
                <li class="pre-context-line"><code>		
</code></li>
                
                <li class="pre-context-line"><code>		case spawn_method
</code></li>
                
                <li class="pre-context-line"><code>		when nil, &quot;&quot;, &quot;smart&quot;, &quot;smart-lv2&quot;
</code></li>
                
              </ol>
              

              <ol start="244" class="context" id="65"
                  onclick="toggle(65);">
                <li class="context-line" id="context-65"><code>			@spawners.synchronize do</code></li>
              </ol>

              
              <ol start="245" class="post-context"
                  id="post-65" onclick="toggle(65);">
                
                <li class="post-context-line"><code>				key = &quot;app:#{app_group_name}&quot;
</code></li>
                
                <li class="post-context-line"><code>				spawner = @spawners.lookup_or_add(key) do
</code></li>
                
                <li class="post-context-line"><code>					spawner_timeout = options[&quot;app_spawner_timeout&quot;]
</code></li>
                
                <li class="post-context-line"><code>					spawner = Rack::ApplicationSpawner.new(
</code></li>
                
                <li class="post-context-line"><code>						@options.merge(options))
</code></li>
                
                <li class="post-context-line"><code>					if spawner_timeout != -1
</code></li>
                
                <li class="post-context-line"><code>						spawner.max_idle_time = spawner_timeout
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;spawn_manager.rb</code> in
                <code><strong>spawn_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="130"
                  class="pre-context" id="pre-66"
                  onclick="toggle(66);">
                
                <li class="pre-context-line"><code>				require &#x27;phusion_passenger&#x2F;classic_rails&#x2F;application_spawner&#x27;
</code></li>
                
                <li class="pre-context-line"><code>			end
</code></li>
                
                <li class="pre-context-line"><code>			return spawn_rails_application(options)
</code></li>
                
                <li class="pre-context-line"><code>		when &quot;rack&quot;
</code></li>
                
                <li class="pre-context-line"><code>			if !defined?(Rack::ApplicationSpawner)
</code></li>
                
                <li class="pre-context-line"><code>				require &#x27;phusion_passenger&#x2F;rack&#x2F;application_spawner&#x27;
</code></li>
                
                <li class="pre-context-line"><code>			end
</code></li>
                
              </ol>
              

              <ol start="137" class="context" id="66"
                  onclick="toggle(66);">
                <li class="context-line" id="context-66"><code>			return spawn_rack_application(options)</code></li>
              </ol>

              
              <ol start="138" class="post-context"
                  id="post-66" onclick="toggle(66);">
                
                <li class="post-context-line"><code>		when &quot;wsgi&quot;
</code></li>
                
                <li class="post-context-line"><code>			if !defined?(WSGI::ApplicationSpawner)
</code></li>
                
                <li class="post-context-line"><code>				require &#x27;phusion_passenger&#x2F;wsgi&#x2F;application_spawner&#x27;
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
                <li class="post-context-line"><code>			return WSGI::ApplicationSpawner.spawn_application(options)
</code></li>
                
                <li class="post-context-line"><code>		else
</code></li>
                
                <li class="post-context-line"><code>			raise ArgumentError, &quot;Unknown &#x27;app_type&#x27; value &#x27;#{options[&quot;app_type&quot;]}&#x27;.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;spawn_manager.rb</code> in
                <code><strong>handle_spawn_application</strong></code>
            </li>

            <li class="code app">
              
              <ol start="268"
                  class="pre-context" id="pre-67"
                  onclick="toggle(67);">
                
                <li class="pre-context-line"><code>	
</code></li>
                
                <li class="pre-context-line"><code>	def handle_spawn_application(client, *options)
</code></li>
                
                <li class="pre-context-line"><code>		options     = sanitize_spawn_options(Hash[*options])
</code></li>
                
                <li class="pre-context-line"><code>		app_process = nil
</code></li>
                
                <li class="pre-context-line"><code>		app_root    = options[&quot;app_root&quot;]
</code></li>
                
                <li class="pre-context-line"><code>		app_type    = options[&quot;app_type&quot;]
</code></li>
                
                <li class="pre-context-line"><code>		begin
</code></li>
                
              </ol>
              

              <ol start="275" class="context" id="67"
                  onclick="toggle(67);">
                <li class="context-line" id="context-67"><code>			app_process = spawn_application(options)</code></li>
              </ol>

              
              <ol start="276" class="post-context"
                  id="post-67" onclick="toggle(67);">
                
                <li class="post-context-line"><code>		rescue AbstractServer::ServerError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>			send_error_page(client, &#x27;general_error&#x27;, :error =&gt; e)
</code></li>
                
                <li class="post-context-line"><code>		rescue VersionNotFound =&gt; e
</code></li>
                
                <li class="post-context-line"><code>			send_error_page(client, &#x27;version_not_found&#x27;, :error =&gt; e, :app_root =&gt; app_root)
</code></li>
                
                <li class="post-context-line"><code>		rescue AppInitError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>			if database_error?(e)
</code></li>
                
                <li class="post-context-line"><code>				send_error_page(client, &#x27;database_error&#x27;, :error =&gt; e,
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server.rb</code> in
                <code><strong>server_main_loop</strong></code>
            </li>

            <li class="code app">
              
              <ol start="350"
                  class="pre-context" id="pre-68"
                  onclick="toggle(68);">
                
                <li class="pre-context-line"><code>					if client_password != password
</code></li>
                
                <li class="pre-context-line"><code>						next
</code></li>
                
                <li class="pre-context-line"><code>					end
</code></li>
                
                <li class="pre-context-line"><code>					
</code></li>
                
                <li class="pre-context-line"><code>					name, *args = client.read
</code></li>
                
                <li class="pre-context-line"><code>					if name
</code></li>
                
                <li class="pre-context-line"><code>						if @message_handlers.has_key?(name)
</code></li>
                
              </ol>
              

              <ol start="357" class="context" id="68"
                  onclick="toggle(68);">
                <li class="context-line" id="context-68"><code>							__send__(@message_handlers[name], client, *args)</code></li>
              </ol>

              
              <ol start="358" class="post-context"
                  id="post-68" onclick="toggle(68);">
                
                <li class="post-context-line"><code>						else
</code></li>
                
                <li class="post-context-line"><code>							raise UnknownMessage, &quot;Unknown message &#x27;#{name}&#x27; received.&quot;
</code></li>
                
                <li class="post-context-line"><code>						end
</code></li>
                
                <li class="post-context-line"><code>					end
</code></li>
                
                <li class="post-context-line"><code>				ensure
</code></li>
                
                <li class="post-context-line"><code>					client_socket.close
</code></li>
                
                <li class="post-context-line"><code>				end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;lib&#x2F;phusion_passenger&#x2F;abstract_server.rb</code> in
                <code><strong>start_synchronously</strong></code>
            </li>

            <li class="code app">
              
              <ol start="199"
                  class="pre-context" id="pre-69"
                  onclick="toggle(69);">
                
                <li class="pre-context-line"><code>	# All hooks will be called, except before_fork().
</code></li>
                
                <li class="pre-context-line"><code>	def start_synchronously(socket_filename, password, server_socket, owner_socket)
</code></li>
                
                <li class="pre-context-line"><code>		@owner_socket = owner_socket
</code></li>
                
                <li class="pre-context-line"><code>		begin
</code></li>
                
                <li class="pre-context-line"><code>			reset_signal_handlers
</code></li>
                
                <li class="pre-context-line"><code>			initialize_server
</code></li>
                
                <li class="pre-context-line"><code>			begin
</code></li>
                
              </ol>
              

              <ol start="206" class="context" id="69"
                  onclick="toggle(69);">
                <li class="context-line" id="context-69"><code>				server_main_loop(password, server_socket)</code></li>
              </ol>

              
              <ol start="207" class="post-context"
                  id="post-69" onclick="toggle(69);">
                
                <li class="post-context-line"><code>			ensure
</code></li>
                
                <li class="post-context-line"><code>				finalize_server
</code></li>
                
                <li class="post-context-line"><code>			end
</code></li>
                
                <li class="post-context-line"><code>		rescue Interrupt
</code></li>
                
                <li class="post-context-line"><code>			# Do nothing
</code></li>
                
                <li class="post-context-line"><code>		ensure
</code></li>
                
                <li class="post-context-line"><code>			@owner_socket = nil
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;home&#x2F;jeff&#x2F;.rvm&#x2F;gems&#x2F;ree-1.8.7-2011.03&#x2F;gems&#x2F;passenger-3.0.9&#x2F;helper-scripts&#x2F;passenger-spawn-server</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="92"
                  class="pre-context" id="pre-70"
                  onclick="toggle(70);">
                
                <li class="pre-context-line"><code>			&quot;logging_agent_password_base64&quot; =&gt; logging_agent_password_base64,
</code></li>
                
                <li class="pre-context-line"><code>			&quot;node_name&quot; =&gt; node_name
</code></li>
                
                <li class="pre-context-line"><code>		}
</code></li>
                
                <li class="pre-context-line"><code>	end
</code></li>
                
                <li class="pre-context-line"><code>	
</code></li>
                
                <li class="pre-context-line"><code>	require &#x27;phusion_passenger&#x2F;spawn_manager&#x27;
</code></li>
                
                <li class="pre-context-line"><code>	spawn_manager = PhusionPassenger::SpawnManager.new(options)
</code></li>
                
              </ol>
              

              <ol start="99" class="context" id="70"
                  onclick="toggle(70);">
                <li class="context-line" id="context-70"><code>	spawn_manager.start_synchronously(socket_filename, socket_password, server_socket, owner_socket)</code></li>
              </ol>

              
              <ol start="100" class="post-context"
                  id="post-70" onclick="toggle(70);">
                
                <li class="post-context-line"><code>	spawn_manager.cleanup
</code></li>
                
                <li class="post-context-line"><code>rescue =&gt; e
</code></li>
                
                <li class="post-context-line"><code>	require &#x27;phusion_passenger&#x2F;utils&#x27;
</code></li>
                
                <li class="post-context-line"><code>	include PhusionPassenger::Utils
</code></li>
                
                <li class="post-context-line"><code>	print_exception(&quot;spawn manager&quot;, e)
</code></li>
                
                <li class="post-context-line"><code>	exit 10
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <table class="req">
          <tr>
            <th>Variable</th>
            <th>Value</th>
          </tr>
          
            <tr>
              <td>rack.session</td>
              <td class="code"><div>&quot;BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFNjk5NjM5MjhmNWNjYTQ5ZmU5MjRm\nZGMyZDEzYTBjNTA5NTQwZmY4ZDdhODVmNzIwNzA1Y2IzMjdiYmRmMjZkMUki\nDXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItMWY5NjJk\nNGQ5M2JjYmUxYTI5OTlhNTY3N2IyNTZjMTZjMzI0YmY5MkkiGUhUVFBfQUND\nRVBUX0VOQ09ESU5HBjsARiItY2E1NDZlMzY5YmVlY2FhZTM5NjhjMTI2ZmNj\nYjhiNTQxNWU0YWU4NEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZGEz\nOWEzZWU1ZTZiNGIwZDMyNTViZmVmOTU2MDE4OTBhZmQ4MDcwOUkiCWNzcmYG\nOwBGIkVlNTZjYzhhNDdkN2I3Y2U5ZjNhMzg4MzFkNDNmZjFjY2YyNzBjNDU5\nNzQxMGFlNzQzZGY0YTk2YmI2YjAwNDFhSSIMYWNjb3VudAY7AEZvOgxBY2Nv\ndW50CzoIQGlkaQc6EEBpZGVudGlmaWVySSIGMQY7AFQ6CkBuYW1lSSIKU21p\ndGgGOwBUOhBAY3JlYXRlZF9hdFU6DURhdGVUaW1lWwhVOg1SYXRpb25hbFsH\nbCsIY2X7DgIAaQIQDlU7DFsHafZpHWkDGRUjOhFAX3JlcG9zaXRvcnlvOhtE\nYXRhTWFwcGVyOjpSZXBvc2l0b3J5CDsJOgxkZWZhdWx0OhNAaWRlbnRpdHlf\nbWFwc3sGYwxBY2NvdW50QzocRGF0YU1hcHBlcjo6SWRlbnRpdHlNYXB7BlsG\naQdAEzoNQGFkYXB0ZXJvOidEYXRhTWFwcGVyOjpBZGFwdGVyczo6TXlzcWxB\nZGFwdGVyCjsJOw86DUBvcHRpb25zQzoVRGF0YU1hcHBlcjo6TWFzaHsOSSIL\nc2NoZW1lBjsARkkiCm15c3FsBjsARkkiCXVzZXIGOwBGSSIJcm9vdAY7AEZJ\nIg1wYXNzd29yZAY7AEZJIgtqZWZmNjkGOwBGSSIJaG9zdAY7AEZJIg5sb2Nh\nbGhvc3QGOwBUSSIJcG9ydAY7AEYwSSIJcGF0aAY7AEZJIhQvY2FwaXRhbGNv\nbm5lY3QGOwBGSSIKcXVlcnkGOwBGMEkiDWZyYWdtZW50BjsARjBJIgxhZGFw\ndGVyBjsARkAlOiBAcmVzb3VyY2VfbmFtaW5nX2NvbnZlbnRpb25tRkRhdGFN\nYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpSZXNvdXJjZTo6VW5kZXJzY29y\nZWRBbmRQbHVyYWxpemVkOh1AZmllbGRfbmFtaW5nX2NvbnZlbnRpb25tNkRh\ndGFNYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpGaWVsZDo6VW5kZXJzY29y\nZWQ6FEBub3JtYWxpemVkX3VyaW86FURhdGFPYmplY3RzOjpVUkkPOgxAc2No\nZW1lQCU6D0BzdWJzY2hlbWUwOgpAdXNlckAnOg5AcGFzc3dvcmRAKToKQGhv\nc3RAKzoKQHBvcnQwOgpAcGF0aEAuOgtAcXVlcnlDOxV7DkkiC3NjaGVtZQY7\nAEZAJUkiCXVzZXIGOwBGQCdJIg1wYXNzd29yZAY7AEZAKUkiCWhvc3QGOwBG\nQCtJIglwb3J0BjsARjBJIglwYXRoBjsARkAuSSIKcXVlcnkGOwBGMEkiDWZy\nYWdtZW50BjsARjBJIgxhZGFwdGVyBjsARkAlOg5AZnJhZ21lbnQwOg5AcmVs\nYXRpdmUwOhhAX3BlcnNpc3RlbmNlX3N0YXRlbzoyRGF0YU1hcHBlcjo6UmVz\nb3VyY2U6OlBlcnNpc3RlbmNlU3RhdGU6OkNsZWFuBzoOQHJlc291cmNlQBM6\nC0Btb2RlbEAf\n&quot;</div></td>
            </tr>
          
        </table>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>DOCUMENT_ROOT</td>
           <td class="code"><div>&#x2F;home&#x2F;jeff&#x2F;Documents&#x2F;projects&#x2F;pos&#x2F;public</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_ENCODING</td>
           <td class="code"><div>gzip</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CONNECTION</td>
           <td class="code"><div>keep-alive</div></td>
         </tr>
         
         <tr>
           <td>HTTP_COOKIE</td>
           <td class="code"><div>rack.session=BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFNjk5NjM5MjhmNWNjYTQ5ZmU5MjRm%0AZGMyZDEzYTBjNTA5NTQwZmY4ZDdhODVmNzIwNzA1Y2IzMjdiYmRmMjZkMUki%0ADXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItMWY5NjJk%0ANGQ5M2JjYmUxYTI5OTlhNTY3N2IyNTZjMTZjMzI0YmY5MkkiGUhUVFBfQUND%0ARVBUX0VOQ09ESU5HBjsARiItY2E1NDZlMzY5YmVlY2FhZTM5NjhjMTI2ZmNj%0AYjhiNTQxNWU0YWU4NEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZGEz%0AOWEzZWU1ZTZiNGIwZDMyNTViZmVmOTU2MDE4OTBhZmQ4MDcwOUkiCWNzcmYG%0AOwBGIkVlNTZjYzhhNDdkN2I3Y2U5ZjNhMzg4MzFkNDNmZjFjY2YyNzBjNDU5%0ANzQxMGFlNzQzZGY0YTk2YmI2YjAwNDFhSSIMYWNjb3VudAY7AEZvOgxBY2Nv%0AdW50CzoIQGlkaQc6EEBpZGVudGlmaWVySSIGMQY7AFQ6CkBuYW1lSSIKU21p%0AdGgGOwBUOhBAY3JlYXRlZF9hdFU6DURhdGVUaW1lWwhVOg1SYXRpb25hbFsH%0AbCsIY2X7DgIAaQIQDlU7DFsHafZpHWkDGRUjOhFAX3JlcG9zaXRvcnlvOhtE%0AYXRhTWFwcGVyOjpSZXBvc2l0b3J5CDsJOgxkZWZhdWx0OhNAaWRlbnRpdHlf%0AbWFwc3sGYwxBY2NvdW50QzocRGF0YU1hcHBlcjo6SWRlbnRpdHlNYXB7BlsG%0AaQdAEzoNQGFkYXB0ZXJvOidEYXRhTWFwcGVyOjpBZGFwdGVyczo6TXlzcWxB%0AZGFwdGVyCjsJOw86DUBvcHRpb25zQzoVRGF0YU1hcHBlcjo6TWFzaHsOSSIL%0Ac2NoZW1lBjsARkkiCm15c3FsBjsARkkiCXVzZXIGOwBGSSIJcm9vdAY7AEZJ%0AIg1wYXNzd29yZAY7AEZJIgtqZWZmNjkGOwBGSSIJaG9zdAY7AEZJIg5sb2Nh%0AbGhvc3QGOwBUSSIJcG9ydAY7AEYwSSIJcGF0aAY7AEZJIhQvY2FwaXRhbGNv%0Abm5lY3QGOwBGSSIKcXVlcnkGOwBGMEkiDWZyYWdtZW50BjsARjBJIgxhZGFw%0AdGVyBjsARkAlOiBAcmVzb3VyY2VfbmFtaW5nX2NvbnZlbnRpb25tRkRhdGFN%0AYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpSZXNvdXJjZTo6VW5kZXJzY29y%0AZWRBbmRQbHVyYWxpemVkOh1AZmllbGRfbmFtaW5nX2NvbnZlbnRpb25tNkRh%0AdGFNYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpGaWVsZDo6VW5kZXJzY29y%0AZWQ6FEBub3JtYWxpemVkX3VyaW86FURhdGFPYmplY3RzOjpVUkkPOgxAc2No%0AZW1lQCU6D0BzdWJzY2hlbWUwOgpAdXNlckAnOg5AcGFzc3dvcmRAKToKQGhv%0Ac3RAKzoKQHBvcnQwOgpAcGF0aEAuOgtAcXVlcnlDOxV7DkkiC3NjaGVtZQY7%0AAEZAJUkiCXVzZXIGOwBGQCdJIg1wYXNzd29yZAY7AEZAKUkiCWhvc3QGOwBG%0AQCtJIglwb3J0BjsARjBJIglwYXRoBjsARkAuSSIKcXVlcnkGOwBGMEkiDWZy%0AYWdtZW50BjsARjBJIgxhZGFwdGVyBjsARkAlOg5AZnJhZ21lbnQwOg5AcmVs%0AYXRpdmUwOhhAX3BlcnNpc3RlbmNlX3N0YXRlbzoyRGF0YU1hcHBlcjo6UmVz%0Ab3VyY2U6OlBlcnNpc3RlbmNlU3RhdGU6OkNsZWFuBzoOQHJlc291cmNlQBM6%0AC0Btb2RlbEAf%0A</div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>pos.local</div></td>
         </tr>
         
         <tr>
           <td>HTTP_RANGE</td>
           <td class="code"><div>bytes=0-199999</div></td>
         </tr>
         
         <tr>
           <td>HTTP_REFERER</td>
           <td class="code"><div>http:&#x2F;&#x2F;pos.local&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>HTTP_USER_AGENT</td>
           <td class="code"><div>Mozilla&#x2F;5.0 SF&#x2F;1.32b</div></td>
         </tr>
         
         <tr>
           <td>PASSENGER_CONNECT_PASSWORD</td>
           <td class="code"><div>JLQQ6pRNFHbewDD08CObDfral19PDO6GssdXTRBuGtU</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;suppliers</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REMOTE_PORT</td>
           <td class="code"><div>58308</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_URI</td>
           <td class="code"><div>&#x2F;suppliers</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>SERVER_ADMIN</td>
           <td class="code"><div>[no address given]</div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>pos.local</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>80</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PROTOCOL</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>SERVER_SOFTWARE</td>
           <td class="code"><div>Apache&#x2F;2.2.17 (Ubuntu)</div></td>
         </tr>
         
         <tr>
           <td>_</td>
           <td class="code"><div>_</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x0000000244e330&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;PhusionPassenger::Utils::RewindableInput:0x00000002cff100 @io=#&lt;PhusionPassenger::Utils::UnseekableSocket:0x00000002b03720 @socket=#&lt;UNIXSocket:fd 12&gt;&gt;, @rewindable_io=nil, @unlinked=false&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Logger:0x00000002cfeed0 @progname=nil, @level=1, @default_formatter=#&lt;Logger::Formatter:0x00000002cfeea8 @datetime_format=nil&gt;, @formatter=nil, @logdev=#&lt;Logger::LogDevice:0x00000002cfee58 @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&lt;IO:&lt;STDERR&gt;&gt;, @mutex=#&lt;Logger::LogDevice::LogDeviceMutex:0x00000002cfee30 @mon_owner=nil, @mon_count=0, @mon_mutex=#&lt;Mutex:0x00000002cfede0&gt;&gt;&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{&quot;rack.session&quot;=&gt;&quot;BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFNjk5NjM5MjhmNWNjYTQ5ZmU5MjRm\nZGMyZDEzYTBjNTA5NTQwZmY4ZDdhODVmNzIwNzA1Y2IzMjdiYmRmMjZkMUki\nDXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItMWY5NjJk\nNGQ5M2JjYmUxYTI5OTlhNTY3N2IyNTZjMTZjMzI0YmY5MkkiGUhUVFBfQUND\nRVBUX0VOQ09ESU5HBjsARiItY2E1NDZlMzY5YmVlY2FhZTM5NjhjMTI2ZmNj\nYjhiNTQxNWU0YWU4NEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZGEz\nOWEzZWU1ZTZiNGIwZDMyNTViZmVmOTU2MDE4OTBhZmQ4MDcwOUkiCWNzcmYG\nOwBGIkVlNTZjYzhhNDdkN2I3Y2U5ZjNhMzg4MzFkNDNmZjFjY2YyNzBjNDU5\nNzQxMGFlNzQzZGY0YTk2YmI2YjAwNDFhSSIMYWNjb3VudAY7AEZvOgxBY2Nv\ndW50CzoIQGlkaQc6EEBpZGVudGlmaWVySSIGMQY7AFQ6CkBuYW1lSSIKU21p\ndGgGOwBUOhBAY3JlYXRlZF9hdFU6DURhdGVUaW1lWwhVOg1SYXRpb25hbFsH\nbCsIY2X7DgIAaQIQDlU7DFsHafZpHWkDGRUjOhFAX3JlcG9zaXRvcnlvOhtE\nYXRhTWFwcGVyOjpSZXBvc2l0b3J5CDsJOgxkZWZhdWx0OhNAaWRlbnRpdHlf\nbWFwc3sGYwxBY2NvdW50QzocRGF0YU1hcHBlcjo6SWRlbnRpdHlNYXB7BlsG\naQdAEzoNQGFkYXB0ZXJvOidEYXRhTWFwcGVyOjpBZGFwdGVyczo6TXlzcWxB\nZGFwdGVyCjsJOw86DUBvcHRpb25zQzoVRGF0YU1hcHBlcjo6TWFzaHsOSSIL\nc2NoZW1lBjsARkkiCm15c3FsBjsARkkiCXVzZXIGOwBGSSIJcm9vdAY7AEZJ\nIg1wYXNzd29yZAY7AEZJIgtqZWZmNjkGOwBGSSIJaG9zdAY7AEZJIg5sb2Nh\nbGhvc3QGOwBUSSIJcG9ydAY7AEYwSSIJcGF0aAY7AEZJIhQvY2FwaXRhbGNv\nbm5lY3QGOwBGSSIKcXVlcnkGOwBGMEkiDWZyYWdtZW50BjsARjBJIgxhZGFw\ndGVyBjsARkAlOiBAcmVzb3VyY2VfbmFtaW5nX2NvbnZlbnRpb25tRkRhdGFN\nYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpSZXNvdXJjZTo6VW5kZXJzY29y\nZWRBbmRQbHVyYWxpemVkOh1AZmllbGRfbmFtaW5nX2NvbnZlbnRpb25tNkRh\ndGFNYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpGaWVsZDo6VW5kZXJzY29y\nZWQ6FEBub3JtYWxpemVkX3VyaW86FURhdGFPYmplY3RzOjpVUkkPOgxAc2No\nZW1lQCU6D0BzdWJzY2hlbWUwOgpAdXNlckAnOg5AcGFzc3dvcmRAKToKQGhv\nc3RAKzoKQHBvcnQwOgpAcGF0aEAuOgtAcXVlcnlDOxV7DkkiC3NjaGVtZQY7\nAEZAJUkiCXVzZXIGOwBGQCdJIg1wYXNzd29yZAY7AEZAKUkiCWhvc3QGOwBG\nQCtJIglwb3J0BjsARjBJIglwYXRoBjsARkAuSSIKcXVlcnkGOwBGMEkiDWZy\nYWdtZW50BjsARjBJIgxhZGFwdGVyBjsARkAlOg5AZnJhZ21lbnQwOg5AcmVs\nYXRpdmUwOhhAX3BlcnNpc3RlbmNlX3N0YXRlbzoyRGF0YU1hcHBlcjo6UmVz\nb3VyY2U6OlBlcnNpc3RlbmNlU3RhdGU6OkNsZWFuBzoOQHJlc291cmNlQBM6\nC0Btb2RlbEAf\n&quot;}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_string</td>
           <td class="code"><div>rack.session=BAh7CUkiD3Nlc3Npb25faWQGOgZFRiJFNjk5NjM5MjhmNWNjYTQ5ZmU5MjRm%0AZGMyZDEzYTBjNTA5NTQwZmY4ZDdhODVmNzIwNzA1Y2IzMjdiYmRmMjZkMUki%0ADXRyYWNraW5nBjsARnsISSIUSFRUUF9VU0VSX0FHRU5UBjsARiItMWY5NjJk%0ANGQ5M2JjYmUxYTI5OTlhNTY3N2IyNTZjMTZjMzI0YmY5MkkiGUhUVFBfQUND%0ARVBUX0VOQ09ESU5HBjsARiItY2E1NDZlMzY5YmVlY2FhZTM5NjhjMTI2ZmNj%0AYjhiNTQxNWU0YWU4NEkiGUhUVFBfQUNDRVBUX0xBTkdVQUdFBjsARiItZGEz%0AOWEzZWU1ZTZiNGIwZDMyNTViZmVmOTU2MDE4OTBhZmQ4MDcwOUkiCWNzcmYG%0AOwBGIkVlNTZjYzhhNDdkN2I3Y2U5ZjNhMzg4MzFkNDNmZjFjY2YyNzBjNDU5%0ANzQxMGFlNzQzZGY0YTk2YmI2YjAwNDFhSSIMYWNjb3VudAY7AEZvOgxBY2Nv%0AdW50CzoIQGlkaQc6EEBpZGVudGlmaWVySSIGMQY7AFQ6CkBuYW1lSSIKU21p%0AdGgGOwBUOhBAY3JlYXRlZF9hdFU6DURhdGVUaW1lWwhVOg1SYXRpb25hbFsH%0AbCsIY2X7DgIAaQIQDlU7DFsHafZpHWkDGRUjOhFAX3JlcG9zaXRvcnlvOhtE%0AYXRhTWFwcGVyOjpSZXBvc2l0b3J5CDsJOgxkZWZhdWx0OhNAaWRlbnRpdHlf%0AbWFwc3sGYwxBY2NvdW50QzocRGF0YU1hcHBlcjo6SWRlbnRpdHlNYXB7BlsG%0AaQdAEzoNQGFkYXB0ZXJvOidEYXRhTWFwcGVyOjpBZGFwdGVyczo6TXlzcWxB%0AZGFwdGVyCjsJOw86DUBvcHRpb25zQzoVRGF0YU1hcHBlcjo6TWFzaHsOSSIL%0Ac2NoZW1lBjsARkkiCm15c3FsBjsARkkiCXVzZXIGOwBGSSIJcm9vdAY7AEZJ%0AIg1wYXNzd29yZAY7AEZJIgtqZWZmNjkGOwBGSSIJaG9zdAY7AEZJIg5sb2Nh%0AbGhvc3QGOwBUSSIJcG9ydAY7AEYwSSIJcGF0aAY7AEZJIhQvY2FwaXRhbGNv%0Abm5lY3QGOwBGSSIKcXVlcnkGOwBGMEkiDWZyYWdtZW50BjsARjBJIgxhZGFw%0AdGVyBjsARkAlOiBAcmVzb3VyY2VfbmFtaW5nX2NvbnZlbnRpb25tRkRhdGFN%0AYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpSZXNvdXJjZTo6VW5kZXJzY29y%0AZWRBbmRQbHVyYWxpemVkOh1AZmllbGRfbmFtaW5nX2NvbnZlbnRpb25tNkRh%0AdGFNYXBwZXI6Ok5hbWluZ0NvbnZlbnRpb25zOjpGaWVsZDo6VW5kZXJzY29y%0AZWQ6FEBub3JtYWxpemVkX3VyaW86FURhdGFPYmplY3RzOjpVUkkPOgxAc2No%0AZW1lQCU6D0BzdWJzY2hlbWUwOgpAdXNlckAnOg5AcGFzc3dvcmRAKToKQGhv%0Ac3RAKzoKQHBvcnQwOgpAcGF0aEAuOgtAcXVlcnlDOxV7DkkiC3NjaGVtZQY7%0AAEZAJUkiCXVzZXIGOwBGQCdJIg1wYXNzd29yZAY7AEZAKUkiCWhvc3QGOwBG%0AQCtJIglwb3J0BjsARjBJIglwYXRoBjsARkAuSSIKcXVlcnkGOwBGMEkiDWZy%0AYWdtZW50BjsARjBJIgxhZGFwdGVyBjsARkAlOg5AZnJhZ21lbnQwOg5AcmVs%0AYXRpdmUwOhhAX3BlcnNpc3RlbmNlX3N0YXRlbzoyRGF0YU1hcHBlcjo6UmVz%0Ab3VyY2U6OlBlcnNpc3RlbmNlU3RhdGU6OkNsZWFuBzoOQHJlc291cmNlQBM6%0AC0Btb2RlbEAf%0A</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.session</td>
           <td class="code"><div>{&quot;session_id&quot;=&gt;&quot;69963928f5cca49fe924fdc2d13a0c509540ff8d7a85f720705cb327bbdf26d1&quot;, &quot;tracking&quot;=&gt;{&quot;HTTP_USER_AGENT&quot;=&gt;&quot;1f962d4d93bcbe1a2999a5677b256c16c324bf92&quot;, &quot;HTTP_ACCEPT_ENCODING&quot;=&gt;&quot;ca546e369beecaae3968c126fccb8b5415e4ae84&quot;, &quot;HTTP_ACCEPT_LANGUAGE&quot;=&gt;&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;}, &quot;csrf&quot;=&gt;&quot;e56cc8a47d7b7ce9f3a38831d43ff1ccf270c4597410ae743df4a96bb6b0041a&quot;, &quot;account&quot;=&gt;#&lt;Account @id=2 @identifier=&quot;1&quot; @name=&quot;Smith&quot; @created_at=#&lt;DateTime: 2011-12-18T11:42:48-05:00 (8841291107&#x2F;3600,-5&#x2F;24,2299161)&gt;&gt;}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.options</td>
           <td class="code"><div>{:key=&gt;&quot;rack.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x0000000314d680&gt;, :id=&gt;&quot;69963928f5cca49fe924fdc2d13a0c509540ff8d7a85f720705cb327bbdf26d1&quot;}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.unpacked_cookie_data</td>
           <td class="code"><div>{&quot;session_id&quot;=&gt;&quot;69963928f5cca49fe924fdc2d13a0c509540ff8d7a85f720705cb327bbdf26d1&quot;, &quot;tracking&quot;=&gt;{&quot;HTTP_USER_AGENT&quot;=&gt;&quot;1f962d4d93bcbe1a2999a5677b256c16c324bf92&quot;, &quot;HTTP_ACCEPT_ENCODING&quot;=&gt;&quot;ca546e369beecaae3968c126fccb8b5415e4ae84&quot;, &quot;HTTP_ACCEPT_LANGUAGE&quot;=&gt;&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;}, &quot;csrf&quot;=&gt;&quot;e56cc8a47d7b7ce9f3a38831d43ff1ccf270c4597410ae743df4a96bb6b0041a&quot;, &quot;account&quot;=&gt;#&lt;Account @id=2 @identifier=&quot;1&quot; @name=&quot;Smith&quot; @created_at=#&lt;DateTime: 2011-12-18T11:42:48-05:00 (8841291107&#x2F;3600,-5&#x2F;24,2299161)&gt;&gt;}</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 0]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;NoMethodError: undefined method `mail&#x27; for nil:NilClass&gt;</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
